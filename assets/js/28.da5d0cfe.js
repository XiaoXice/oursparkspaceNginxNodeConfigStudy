(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{204:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p",[t._v("“分层设计”是任何程序在开始开发之前要做的事情，没有经过分层设计的程序到最后基本都是不可维护的。这一节我们就将所需要的后台分割成几个小模块，加个大问题分解成小问题。")]),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("按照需求导向型，我们需要知道自己写的代码需要干什么？")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),n("p",[t._v("REST，即Representational State Transfer的缩写。")]),t._v(" "),n("p",[t._v("我们总结一下什么是RESTful架构：")]),t._v(" "),t._m(6),t._v(" "),n("p",[t._v("具体的规则可以参考这个网页"),n("a",{attrs:{href:"https://www.jianshu.com/p/8b769356ee67",target:"_blank",rel:"noopener noreferrer"}},[t._v("restful接口设计规范总结"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("回顾一下第一章的内容，我们的资源有下面几个：")]),t._v(" "),t._m(7),t._v(" "),n("p",[t._v("我们需要的功能有：")]),t._v(" "),t._m(8),t._v(" "),n("p",[t._v("因此对应接口的列表也就可以可以出现了")]),t._v(" "),t._m(9),t._v(" "),n("p",[t._v("然后就是给每个接口调用需要传递的参数进行规定，这方面的事情应该就可以水到渠成了。等我们具体的进行接口实现的时候在加考虑，如果你认为自己独立设计这么一套接口有些困难，这是正常现象，毕竟很多人都是第一次考虑这么后端的事情，平时在网页上点点点，应该也不会注意背后的运行机制，有兴趣的同学可以去Github的API列表学习一下它的设计思路，平时在使用网站/APP/微信小程序的时候也可以把自己当作设计师，想一下如果是让我们自己设计，应该如何设计。")]),t._v(" "),t._m(10),t._v(" "),n("p",[t._v("再次回顾我们的资源：")]),t._v(" "),t._m(11),t._v(" "),n("p",[t._v("根据MongoDB的NoSQL特性，我们这样设计三个集合和他们的结构：")]),t._v(" "),t._m(12),t._v(" "),n("p",[t._v("到此为止，我们后端的总体设计就完成了，下面我们就开始构建我们的后端程序。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"后端整体设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后端整体设计","aria-hidden":"true"}},[this._v("#")]),this._v(" 后端整体设计")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"我们需要干什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我们需要干什么？","aria-hidden":"true"}},[this._v("#")]),this._v(" 我们需要干什么？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"接口设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口设计","aria-hidden":"true"}},[this._v("#")]),this._v(" 接口设计")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("毫无疑问，作为微信小程序的后台，它要做的最重要的事情就是完成前端提交的各种请求，前端和后端之间的沟通使用则是HTTP协议，很显然，后端提供的服务有很多，并不是一个接口可以解决的，区分不同接口的则是"),s("code",[this._v("URL")]),this._v("Uniform Resource Locator，统一资源定位符，也就是我们常说的网址或者路径。不同的路径指向不同的网页/资源/接口，相同的路径则指向相同的东西。URL通常是使用"),s("code",[this._v("/")]),this._v("作为分隔符，一级一级的结构。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("现在轮到我们自己来定义自己接口的URL，这时候我们就需要"),s("strong",[this._v("接口设计")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("作为一个前后端分离的程序，常见的后端API设计是采用"),s("code",[this._v("RESTful")]),this._v("接口设计风格。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("每一个URI代表一种资源；")]),this._v(" "),s("li",[this._v("客户端和服务器之间，传递这种资源的某种表现层；")]),this._v(" "),s("li",[this._v('客户端通过四个HTTP动词，对服务器端资源进行操作，实现"表现层状态转化"。')])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("用户")]),this._v(" "),s("li",[this._v("留言")]),this._v(" "),s("li",[this._v("留言的评论")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("用户的登录和状态检查")]),this._v(" "),s("li",[this._v("留言的创建和获取")]),this._v(" "),s("li",[this._v("评论的创建和获取")]),this._v(" "),s("li",[this._v("喜欢的点赞和获取")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("POST /login 使用微信接口登录")]),t._v(" "),n("li",[t._v("GET /user/:id 获取该用户相关信息")]),t._v(" "),n("li",[t._v("POST /message 创建一个新的留言")]),t._v(" "),n("li",[t._v("GET /message 获取留言列表")]),t._v(" "),n("li",[t._v("DELETE /message/:id 删除一个留言")]),t._v(" "),n("li",[t._v("PATCH /message/:id 更新留言内容")]),t._v(" "),n("li",[t._v("GET /message/:id/comment 获取某个留言的评论列表")]),t._v(" "),n("li",[t._v("POST /message/:id/comment 提交一个评论")]),t._v(" "),n("li",[t._v("GET /message/:id/comment/:id 获取某个留言的评论的相关信息")]),t._v(" "),n("li",[t._v("DELETE /message/:id/comment/:id 删除一个评论")]),t._v(" "),n("li",[t._v("PATCH /message/:id/comment/:id 更新评论内容")]),t._v(" "),n("li",[t._v("POST /message/:id/like 给留言喜欢")]),t._v(" "),n("li",[t._v("DELETE /message/:id/like 取消留言的喜欢")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"数据库结构设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库结构设计","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据库结构设计")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("用户")]),this._v(" "),s("li",[this._v("留言")]),this._v(" "),s("li",[this._v("留言的评论")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("p",[t._v("user")]),t._v(" "),n("div",{staticClass:"language-JS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    _id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MongoDB自动生成的唯一标识")]),t._v("\n    openID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 微信小程序的统一用户ID")]),t._v("\n    sessionKey"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用来和 微信小程序校验信息的 东西")]),t._v("\n    nickName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户昵称")]),t._v("\n    avatarUrl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户头像地址")]),t._v("\n    messgaeList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个用户的所有留言的_id组成的数组")]),t._v("\n    commitLIst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个用户所有评论_id组成的数组")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("message")]),t._v(" "),n("div",{staticClass:"language-JS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    _id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MongoDB 自动生成的唯一标识")]),t._v("\n    author"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这篇留言的作者")]),t._v("\n    content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这篇留言的内容")]),t._v("\n    like"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 点赞的人")]),t._v("\n    commitList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 评论列表")]),t._v("\n    creationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建时间")]),t._v("\n    updateTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Date          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新时间")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("commit")]),t._v(" "),n("div",{staticClass:"language-JS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    _id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MongoDB 自动生成的统一ID")]),t._v("\n    author"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这篇评论的作者")]),t._v("\n    message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这篇评论所处的留言")]),t._v("\n    content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这篇评论的内容")]),t._v("\n    followList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回复这篇评论的评论(这个特性太难了，各位可以想想怎么实现，暂时用不到)")]),t._v("\n    creationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建时间")]),t._v("\n    updateTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Date          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新时间")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])}],!1,null,null,null);s.default=e.exports}}]);